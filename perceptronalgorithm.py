# -*- coding: utf-8 -*-
"""PerceptronAlgorithm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J2q2vxBbppKeTVbq_rv8bORfJ5pXJGLT

# **Import the libraries**
"""

# Import libraries
from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn.linear_model import Perceptron
from sklearn.metrics import accuracy_score

"""# **Step 1: Load the data and store the labels in a variable x and target in variable y**"""

iris_dataset = datasets.load_iris()                   # load the iris dataset
X = iris_dataset.data[:, [2,3]]                       # load the data in indices 2 and 3 (petal length and petal width) into the variable X
y = iris_dataset.target                               # loads the target data into variable y

"""# **Step 2: Split the dataset into a training set and test set**"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3) # splitting the data into training data and testing data

"""# **Step 3: Create the model**"""

perceptron_model = Perceptron(max_iter=3, tol=1e-3, eta0=0.001, fit_intercept=True, random_state=0, verbose=True) # create the model

"""# **Step 4: train the model**


"""

perceptron_model.fit(X_train, y_train)            # train the model on training data

"""# **Step 5: Test the model**"""

y_predict = perceptron_model.predict(X_test)      # test the model on test data

"""# **Step 6: Evaluate the model**"""

accuracy = accuracy_score(y_test, y_predict) # determine accuracy
accuracy = accuracy * 100 # convert to percentage

# print the results
print("\nAccuracy of model: " + str(round(accuracy,2)) + "%\n") # print accuracy

"""# **Show some examples of flowers indentificated by the program**"""

# Map target labels to species names for better readability
species = {0: 'setosa', 1: 'versicolor', 2: 'virginica'}

# Print some examples of predictions along with actual labels
print("Examples of flower identification:\n")
for i in range(10):  # Show 10 examples
    print(f"Sample {i+1}:")
    print(f"  Predicted: {species[y_predict[i]]}")
    print(f"  Actual: {species[y_test[i]]}")
    print(f"  Features (petal length, petal width): {X_test[i]}")
    print()